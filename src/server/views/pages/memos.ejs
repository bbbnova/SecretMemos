<nav class="memosBar">
    <ul>
        <li>
            <a href="/memos/add" class="icon icon-addMemos">
                <!-- <img src="/icons/add-note-svgrepo-com.svg" width="32" height="32"/> -->
            </a>
        </li>
        <li class="float-right">
            <input type="search" name="search" id="search" placeholder="search" oninput="onSearch(this)"/>
        </li>
    </ul>
</nav>

<div class="tableWrapper">
    <table id="memosTable">   
        <thead>
            <tr>
                <th id="categoryTd">Category</th>
                <th id="applicationTd">Application</th>
                <th id="accountTd">Account name</th>
                <th id="emailTd">Email</th>
                <th id="urlTd">Url</th>
                <!-- <th id="noteTd">Note</th> -->
                <th id="controlsTd"></th>
            </tr>
        </thead> 
        <tbody>
            
        </tbody>
    </table>

    <!-- <article
        id="mems"
        data-memos="<%=locals.strMemos%>">
    </article> -->
</div>

<script>
    if(!sessionStorage.getItem('pwd')) {
        window.location.replace('/login')
    }

    async function getMemos() {
        let response = await fetch("http://localhost:3000/api/memos/get", {
            method: "GET" 
        })

        if(response.status === 200) {
            return await response.json(); 
        } else {
            console.log('error loading memos')
        }
    }

    async function getMemoPasswordById(id) {
        let response = await fetch("http://localhost:3000/api/memos/getPasswordById", {
            method: "POST",
            body: JSON.stringify({
                _id: id
            }),
            headers: {
                "Content-type": "application/json; charset=UTF-8"
            }
        })

        let password = await response.json();
        return password
    }

    async function getUserSalt() {
        let response = await fetch("http://localhost:3000/api/user/getSalt", {
            method: "GET"
        })
        
        let {salt} = await response.json();
        return salt;
    }

    async function initCopyButton(button) { 
            let password = await getMemoPasswordById(button.dataset.id)
                
            let salt = await getUserSalt()
            let encryptedPwd = sessionStorage.getItem('pwd')
            let pwd = await decrypt(encryptedPwd, salt);

            try {
                await navigator.clipboard.writeText(await decrypt(password, pwd));
                alert('Password copied to clipboard')
            } catch (err) {
                alert(err.message)
            }
        }

    function initEditButton(button) {
        window.location.href = '/memos/editMemo?id=' + button.dataset.id
    }

    window.onload = async (event) => {      
        let memos = await getMemos()
        let salt = await getUserSalt()
        let encryptedPwd = sessionStorage.getItem('pwd')
        let pwd = await decrypt(encryptedPwd, salt);
        
        let table = document.querySelector("#memosTable")
        for(let i = 0; i < memos.length; i ++) {
            let memo = memos[i]

            let row = table.tBodies[0].insertRow()
            row.id = row.dataset.id = memo._id
            let cell0 = row.insertCell(0)
            cell0.innerHTML = memo.category
            let cell1 = row.insertCell(1)
            cell1.innerHTML = memo.applicationName
            let cell2 = row.insertCell(2)
            cell2.innerHTML = memo.accountName
            let cell3 = row.insertCell(3)
            cell3.innerHTML = memo.email
            let cell4 = row.insertCell(4)
            cell4.innerHTML = memo.url
            
            let cell5 = row.insertCell(5)
            cell5.innerHTML = `<button onclick="initCopyButton(this)" data-id="${memo._id}" class=\"copy\">Copy</button>` +
                `<button onclick="initEditButton(this)" data-id="${memo._id}" class=\"edit\">Edit</button>`
            let rowContent = table.tBodies[0].insertRow()
            
            let cell0Content = rowContent.insertCell(0)
            cell0Content.classList.add('hidden')
            row.onclick = async () => {
                let selected = document.querySelectorAll('.selected')
                
                selected.forEach(s => s.classList.remove('selected'))
                row.classList.add('selected')

                if(cell0Content.classList.contains('hidden')) {
                    row.classList.add('selected')
                    let decryptedNote = await decrypt(memo.note, pwd)
                    if(decryptedNote.length > 0) {
                        cell0Content.innerHTML = decryptedNote
                        cell0Content.classList.remove('hidden')
                    }
                    
                } else {
                    cell0Content.classList.add('hidden')
                    cell0Content.innerHTML = ''
                }
            }
            cell0Content.colSpan="6"
        } 

        if(window.location.href.includes('#')) {
            var searchId = window.location.href.split('#')[1]
            let element = document.getElementById(searchId)
            if(element) {
                console.log(element)
                element.scrollIntoView()
            }
        }

        // var searchId = window.location.href.split('#')[1]
        // console.log(searchId)
        // let element = document.querySelector('#'+searchId)
        // console.log(element)
        // if(elÐµment) {
        //     element.scrollInToView()
        // }

        // document.querySelector("#")
        

        // document.querySelectorAll('button.copy').forEach((button) => {
        //     button.addEventListener('click', async () => {
        //         let password = await getMemoPasswordById(button.dataset.id)
                
        //         let salt = await getUserSalt()
        //         let encryptedPwd = sessionStorage.getItem('pwd')
        //         let pwd = await decrypt(encryptedPwd, salt);

        //         try {
        //             await navigator.clipboard.writeText(await decrypt(password, pwd));
        //             alert('Password copied to clipboard')
        //         } catch (err) {
        //             alert(err.message)
        //         }
        //     })
        // })
    } 

    

    

    // let article = document.querySelector("#mems")
    // let memos = article.dataset.memos;
    // // let memos = '<%- locals.smemos %>'    
    // // memos = memos.replace('\\', "\\\\")
    // memos = JSON.parse(memos)

    // function groupBy(list, keyGetter) {
    //     const map = new Map();
    //     list.forEach((item) => {
    //         const key = keyGetter(item);
    //         const collection = map.get(key);
    //         if (!collection) {
    //             map.set(key, [item]);
    //         } else {
    //             collection.push(item);
    //         }
    //     });
    //     return map;
    // }

    // const grouped = groupBy(memos, m => m.category); 

    // window.addEventListener('load', async function() { 
    //     let noteCells = Array.from(document.getElementsByClassName('note'));
        
    //     // let note = await decrypt(noteCells[0].innerHTML.toString(), 'v1126v')
    //     // console.log(note)
    //     for(let i = 0; i < noteCells.length; i++) {
    //         let element = noteCells[i]
    //         if(element.innerHTML.length > 0) {
    //             let note = await decrypt(element.innerHTML.toString(), 'v1126v')
                
    //             element.innerHTML = note
    //         }
    //     } 
    // }, false);  
    
    
</script>


<!-- <script>
    
    async function get() {
        var myHeaders =  new Headers()
        myHeaders.append('Content-Type','application/json; charset=utf-8');
        myHeaders.append('Authorization', 'Bearer ' + sessionStorage.getItem('token'));

        let res = await fetch( '/api/memos/get', {
            credentials: 'include',
            headers: myHeaders,
            method: 'GET'
        })

        if(res && res.status === 200) {
            console.log('load memos from response')
        } else {
            //redirect to unauthorized
            console.log('no res')
        }
    }

    get();
</script> -->

<!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <script src="scripts/cryptography.js"></script>
    <script>
        async function sendEncryptedData(cipherText){

            const code = await encrypt(cipherText, 'v1126v');

            console.log('send from browsed data: ' + code)

            fetch("http://localhost:3000/api/test/data", {
                method: "POST",
                body: JSON.stringify({
                    data: code
                }),
                headers: {
                    "Content-type": "application/json; charset=UTF-8"
                }
            })
            // .then((response) => response.json())
            // .then((json) => console.log(json));
        }

        async function encryptText() {
            document.getElementById('text').value = await encrypt(document.getElementById('text').value, 'v1126v')
        }
        async function decryptText() {
            document.getElementById('text').value = await decrypt(document.getElementById('text').value, 'v1126v')
        }
    </script>
</head>
<body>
    <h1>Home page</h1>
    <p>Server running on port: </p>

    <textarea id="text" name="data" rows="15" cols="100" ></textarea>
    <button onclick="sendEncryptedData(document.getElementById('text').value)">Encrypt</button>
    <button onclick="decryptText()">Decrypt</button>
    
</body>


</html> -->