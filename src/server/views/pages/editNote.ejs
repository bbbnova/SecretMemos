
<form id="form" class="container"> 
    <input name="title" id="title" type="text" value="<%=locals.note.title%>"/>
    <br/>
    <input name="description" id="description" placeholder="description" type="text" value="<%-locals.note.description%>"/>
    <br/>
    <input name="number" id="number" type="number" value="<%-locals.note.number%>"/>

    <div class="pages">
        <% for(let i = 0; i < locals.note.pages.length; i++) {%>
            <button data-page="<%=JSON.stringify(locals.note.pages[i])%>" onclick="pageClick(this)"><%-locals.note.pages[i].title%></button>
        <% } %>
    </div>
    <br/>
    <br/>
    <br/>
    <div class="pageContent">
        <!-- <textarea id="pageText" cols="50" rows="50">

        </textarea> -->

        <div class="main-container">
            <div class="editor-container editor-container_inline-editor" id="editor-container">
                <div class="editor-container__editor">
                    <div id="editor"></div>
                </div>
            </div>
        </div>
        
    </div>

    <button id="btnSave" onclick="saveData()">Save</button>
</form>

<script type="importmap">
    {
        "imports": {
            "ckeditor5": "/ckeditor/ckeditor5/ckeditor5.js",
            "ckeditor5/": "/ckeditor/ckeditor5/"
        }
    }
</script>

<script type="module" src="/ckeditor/main.js"></script>

<script>
    let currentPage;

    async function getUserSalt() {
        let response = await fetch("http://localhost:3000/api/user/getSalt", {
            method: "GET"
        })
        
        let {salt} = await response.json();
        return salt;
    }

    async function pageClick(button) {
        const domEditableElement = document.querySelector( '.ck-editor__editable_inline' ); 
        const editor = domEditableElement.ckeditorInstance; 
        

        let salt = await getUserSalt()
        let encryptedPwd = sessionStorage.getItem('pwd')
        let pwd = await decrypt(encryptedPwd, salt); 

        let page = currentPage = JSON.parse(button.dataset.page)
        // document.getElementById('pageText').value = await decrypt(page.content, pwd)
        editor.setData(await decrypt(page.content, pwd));
        
    }

    async function saveData() {
        let form = document.getElementById('form')

        let salt = await getUserSalt()
        let encryptedPwd = sessionStorage.getItem('pwd')
        let pwd = await decrypt(encryptedPwd, salt);  
        
        const domEditableElement = document.querySelector( '.ck-editor__editable_inline' ); 
        const editor = domEditableElement.ckeditorInstance;

        let data = editor.getData();
        data = await encrypt(data, pwd)
        
        //update page
        //update note
        let response = await fetch("http://localhost:3000/api/notes/update", {
                method: "POST",
                body: JSON.stringify({
                    _id: note._id,
                    title: form.title.value,
                    number: form.number.value,
                    description: form.description.value,
                    page_id: currentPage._id,
                    page_content: data
                }),
                headers: {
                    "Content-type": "application/json; charset=UTF-8"
                }
            })
        if(response.status === 200) {
            window.location.href = '/notes'
        }
    }

    const loadFirstPage = async () => {
        let salt = await getUserSalt()
        let encryptedPwd = sessionStorage.getItem('pwd')
        let pwd = await decrypt(encryptedPwd, salt); 

        let page = JSON.parse('<%- JSON.stringify(locals.note.pages[0]) %>')
        currentPage = page
        const domEditableElement = document.querySelector( '.ck-editor__editable_inline' ); 
        const editor = domEditableElement.ckeditorInstance; 

        editor.setData(await decrypt(page.content, pwd));
    }

    let note = JSON.parse('<%- JSON.stringify(locals.note) %>')
    if(note.pages.length > 0) {
        loadFirstPage()
    }
</script>